{
	"info": {
		"_postman_id": "e4a08a59-448d-4ad2-9a58-26f40bcb9bd0",
		"name": "Bytes_Tournament",
		"description": "Bytes Tournament es un sistema backend para la organización y gestión de torneos de videojuegos online. La plataforma proporciona una API REST completa que permite a los usuarios crear torneos, registrarse para participar, competir y seguir los resultados en tiempo real. El sistema incluye funcionalidades como emparejamiento automático de jugadores, sistema de chat básico, clasificaciones dinámicas y actualización de resultados, todo construido con un enfoque en la robustez, seguridad y preparación para entornos de producción.\n\n## Metodología de Trabajo 🛠️\n\nEste proyecto sigue la metodología ágil **Scrum** para la gestión y desarrollo de las tareas.  \nUtilizamos **Trello** para organizar y hacer seguimiento de las tareas, asegurando una colaboración eficiente y una entrega continua de valor.\n\n## Equipo de Desarrollo 👥\n\n@karlosvas  \n@JariJariLo  \n@Rs-845  \n@ChristianEscalas\n\nCreadores de Bytes Colaborativos:  \n@devch-tech y @Jorexbp  \nCanal de Twitch: [Bytes Colaborativos](https://www.twitch.tv/api/bytescolaborativos)\n\n## Funcionalidades Principales 🧩\n\n- **Gestión de usuarios**: Sistema completo con registro, autenticación y roles diferenciados (administrador, organizador, jugador).\n    \n- **Gestión de torneos**: Creación, edición, consulta y eliminación de torneos con diferentes formatos y configuraciones.\n    \n- **Sistema de registro**: Inscripción de jugadores en torneos con validación de requisitos.\n    \n- **Emparejamiento automático**: Algoritmo inteligente para emparejar jugadores según nivel, historial y otros parámetros.\n    \n- **Chat básico**: Comunicación entre jugadores mediante sistema HTTP para coordinación de partidas.\n    \n- **Clasificaciones dinámicas**: Tablas de clasificación actualizadas en tiempo real según resultados.\n    \n- **Seguimiento de resultados**: Registro y actualización de resultados con histórico de partidas.\n    \n- **API REST documentada**: Endpoints bien definidos y documentados para facilitar la integración.\n    \n- **Seguridad robusta**: Control de acceso basado en roles con autenticación JWT.\n    \n\n## Tecnologías Utilizadas 🐧🐋\n\n- **Lenguaje**: Java 17\n    \n- **Framework**: Spring Boot (MVC)\n    \n- **Seguridad**: Spring Security + JWT\n    \n- **Base de datos**: PostgreSQL\n    \n- **Documentación de API**: SwaggerUI\n    \n- **Testing**:\n    \n    - Postman para pruebas de integración\n        \n    - JUnit/Mockito para pruebas unitarias\n        \n- **Control de versiones**: Git (GitHub)\n    \n- **Gestión de proyecto**: Trello (metodología Scrum)\n    \n- **Contenedores**: Docker (para desarrollo y despliegue)\n    \n\n## Instalación y Configuración 🚀\n\n### Requisitos Previos\n\n- Java 17 instalado\n    \n- PostgreSQL instalado y configurado\n    \n- Docker (opcional, para contenedores)\n    \n- Maven instalado (mvn)\n    \n- Archivo .env configurado con las variables necesarias\n    \n\n### Pasos para la Instalación\n\n```\n  // Clonar el repositorio\n  git clone https://github.com/karlosvas/bytes-tournament.git\n  cd bytes-tournament\n  // IMPORTANTE: Crear un archivo .env en la raíz del proyecto con las variables del .env.demo:\n  mvn clean install // O mvn clean package\n  // Dos opciones:\n  // 1. Ejecutar con Doker\n  docker-compose up\n  // 2. Ejecutar directamente, es lo mismo que (Boton de inicio)\n  mvn spring-boot:run\n  // Ya podrás acceder a la API en http://localhost:8081/api\n\n ```\n\n## **Resultados de endpoints**\n\n| Endpoint | Método | Respuesta Exitosa | Código |\n| --- | --- | --- | --- |\n| `/api/auth/register` | POST | Usuario registrado | 201 |\n| `/api/auth/login` | POST | Token JWT | 200 |\n| `/api/user/me` | GET | UserDTO del usuario autenticado | 200 |\n| `/api/user/{id}` | GET | UserDTO del usuario | 200 |\n| `/api/users/list` | GET | Lista de UserDTO | 200 |\n| `/api/tournaments` | GET | Lista de TournamentDTO | 200 |\n| `/api/tournaments/{id}` | GET | TournamentDTO | 200 |\n| `/api/tournaments` | POST | TournamentDTO creado | 201 |\n| `/api/tournaments/players` | POST | TournamentDTO actualizado | 201 |\n| `/api/tournaments/players/me` | POST | TournamentDTO actualizado | 201 |\n| `/api/tournaments/ranking/{tournamentId}` | GET | Ranking | 200 |\n| `/api/tournaments/ranking/details/{tournamentId}` | GET | Detalles de ranking | 200 |\n| `/api/matches/generate/{tournamentId}` | POST | Lista de MatchDTO | 201 |\n| `/api/matches/{matchId}` | GET | MatchDTO | 200 |\n| `/api/matches/{id}/result` | PUT | MatchDTO actualizado | 200 |",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "41327597"
	},
	"item": [
		{
			"name": "User",
			"item": [
				{
					"name": "Me (PLAYER, ADMIN)",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/user/auth/me",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"user",
								"auth",
								"me"
							]
						}
					},
					"response": []
				},
				{
					"name": "List users (ADMIN)",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/user/list",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"user",
								"list"
							]
						}
					},
					"response": []
				},
				{
					"name": "IdUser",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/user/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"user",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login (ALL)",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"username\": \"chanti\",\r\n  \"email\": \"chanti@gmail.com\",\r\n  \"password\": \"chanti1234\",\r\n  \"role\": \"PLAYER\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/user/auth/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"user",
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login (ADMIN)",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"username\": \"admin\",\r\n  \"email\": \"admin@bytes.com\",\r\n  \"password\": \"admin\",\r\n  \"role\": \"ADMIN\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/user/auth/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"user",
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "RegisterPlayer1 (ALL)",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"username\": \"chanti\",\r\n  \"email\": \"chanti@gmail.com\",\r\n  \"password\": \"chanti1234\",\r\n  \"role\": \"PLAYER\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/user/auth/register",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"user",
								"auth",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "RegisterPlayer2 (ALL)",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"username\": \"jorge\",\r\n  \"email\": \"jorge@gmail.com\",\r\n  \"password\": \"jorge1234\",\r\n  \"role\": \"PLAYER\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/user/auth/register",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"user",
								"auth",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update User (ADMIN)",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"username\": \"jorgee\",\r\n  \"email\": \"jorgee@gmail.com\",\r\n  \"password\": \"jorgee20\",\r\n  \"role\": \"ADMIN\",\r\n  \"points\": 900\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/user/2",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"user",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete user (ADMIN)",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/user/4",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"user",
								"4"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Tournament",
			"item": [
				{
					"name": "RankingClasification",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/tournaments/ranking/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"tournaments",
								"ranking",
								"1"
							],
							"query": [
								{
									"key": "pretty",
									"value": "true",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "DetailsRanking",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/tournaments/ranking/details/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"tournaments",
								"ranking",
								"details",
								"1"
							],
							"query": [
								{
									"key": "pretty",
									"value": "true",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "List tournaments(ALL)",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/tournaments/list",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"tournaments",
								"list"
							]
						}
					},
					"response": []
				},
				{
					"name": "Tournament_ID(ADMIN)",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhZG1pbiIsImlhdCI6MTc1MTA0MzI2OCwiZXhwIjoxNDcxMTA0MzI2OH0.hnyFYFzVbQuNNuGBnHm2zGm8bPuW6lpT0IOlIHPjuouEE0TL2SH39ijWrhIUjWNK6-C01KYJdJWVxaPkEoEieg",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/tournaments/list",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"tournaments",
								"list"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create tournaments(ADMIN)",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhZG1pbiIsImlhdCI6MTc1MTA0MzczMywiZXhwIjoxNDcxMTA0MzczM30._MkOfqf2FMkbMwzqaUMieYUMnuXIwJ-RbznEJju3CuI8QkvAXn9nzg1026bylGs8Nid35GJHh9OL6RQhFcmPHA",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"Torneo de Verano 2027\",\r\n  \"maxPlayers\": 10,\r\n  \"status\": \"PENDING\",\r\n  \"maxRounds\": 10\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/tournaments",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"tournaments"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add me to turnament(ALL)",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/tournaments/players/me",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"tournaments",
								"players",
								"me"
							],
							"query": [
								{
									"key": "tournamentId",
									"value": "1",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Add user to tournament(ALL)",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/tournaments/players",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"tournaments",
								"players"
							],
							"query": [
								{
									"key": "tournamentId",
									"value": "1",
									"disabled": true
								},
								{
									"key": "userName",
									"value": "carlos",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "UpdateTournament (ADMIN)",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"Torneo 2028\",\r\n  \"maxPlayers\": 10,\r\n  \"status\": \"PENDING\",\r\n  \"maxRounds\": 2\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/tournaments/4",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"tournaments",
								"4"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Tournament(ADMIN)",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"Torneo de Verano 2025\",\r\n  \"maxPlayers\": 10,\r\n  \"status\": \"PENDING\",\r\n  \"maxRounds\": 10\r\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/tournaments/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"tournaments",
								"1"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Message",
			"item": [
				{
					"name": "Tournament Messages(ALL)",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/message/tournament/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"message",
								"tournament",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Match Messages(ALL)",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/message/match/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"message",
								"match",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "All messages(ALL)",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/message/list",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"message",
								"list"
							]
						}
					},
					"response": []
				},
				{
					"name": "Send tournament message(ALL)",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"senderId\": 1,\r\n  \"content\": \"¡Hola BytesColaborativos!\",\r\n  \"matchId\": 1,\r\n  \"tournamentId\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/message/tournament/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"message",
								"tournament",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Send match message(ALL)",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"senderId\": 1,\r\n  \"content\": \"Hola BytesColaborativos!!\",\r\n  \"matchId\": 1,\r\n  \"tournamentId\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/message/match/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"message",
								"match",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Message(ADMIN)",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"senderId\": 1,\r\n  \"content\": \"¡Hola de nuevo BytesColaborativos!\",\r\n  \"matchId\": 1,\r\n  \"tournamentId\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/message/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"message",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete message(ADMIN)",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/message/2",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"message",
								"2"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Matches",
			"item": [
				{
					"name": "Create match(ADMIN)",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/matches/generate/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"matches",
								"generate",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Check Match",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/matches/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"matches",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Show all match(ADMIN)",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/matches/list",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"matches",
								"list"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Match(ADMIN)",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": 1,\r\n    \"tournament\": 1,\r\n    \"player1\": 3,\r\n    \"player2\": 2,\r\n    \"result\": \"PLAYER2_WIN\",\r\n    \"round\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/matches/1/result",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"matches",
								"1",
								"result"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Match(ADMIN)",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/matches/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"matches",
								"1"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Admin",
			"item": [
				{
					"name": "Dashboard",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhZG1pbiIsImlhdCI6MTc1MTA0NTEzMCwiZXhwIjoxNDcxMTA0NTEzMH0.3huYGPtcyCvg84Mx8k-nr-5Y6FbIVtYv5_r2JxPK9o6vcS9dv9wmPXHFC3Aoi0HYBROVb0a1xEQiLk526lQ3gA",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"username\": \"admin\",\r\n  \"email\": \"admin@bytes.com\",\r\n  \"password\": \"admin\",\r\n  \"role\": \"ADMIN\",\r\n  \"points\": 1000\r\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/admin/dashboard",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"admin",
								"dashboard"
							]
						}
					},
					"response": []
				},
				{
					"name": "Assign user create permission",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhZG1pbiIsImlhdCI6MTc1MDg2OTA4OCwiZXhwIjoxNDcxMDg2OTA4OH0.WQCb0coIMbawSE_EFbsEZDJ0E0k_AoCrIWGKRyiI9T2go30hYDqNFS0XlQBIP1rTniKQFPHwAJOGyIbITAVu2A",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/admin/createAdmin?username=admin",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"admin",
								"createAdmin"
							],
							"query": [
								{
									"key": "username",
									"value": "admin"
								}
							]
						}
					},
					"response": []
				}
			]
		}
	]
}